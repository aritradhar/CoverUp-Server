{
  "seed": "GBiPJkTOrqGSQWL0jebxvOPYF83Mmn5lb1w0oUN0QPk=",
  "data": "GlUbEQUJXktROQYTEQlEcyYADRJUHgkBACUbCB0AEQgUSBYMDQhNCAIITg4dChYAQQcBC0cmN2FEHgMUDEMXGQZJEQsAARZVGhwAUm1SLRhUHQkLADYLFkJPB1VFUVZDRVQ6AAFCBg9OQVAfAAYASQwPQQISTgVOE0gvPCQALxcOBREbEk5BBAYeFkUbQQxBB08BDQ8QRBYQTxsMTy8SWUR9VzsdCURHEARWBhwBARoAAQ0HFx0BVQwGABEMThUDTBpPGhsZHhABAAMBEUhXAFJdQyEEFVQZHQ4BSQsRTwAOGg8DB0MbRkkaSCdPJUMaCUERCRdPcxcXExwIHEUJSRgBFRVSDUgGQR1FTAYGQbfYQRgOEqv4E01FMkYADBdEdgAbTx8PUmQBTxMRAA9UBwJSBwYMCgoADwEGT0Y2BhoTEUkUX0VaM1QYVi9sfGh5NQMaDRxVEA1SEUgXRRIEFQAJAUwOQQVBHhEDAAAQCR0OUDsaEVIyHBcGAAIcTQxVGhsdDE0CDVxMAwYNDU4QSBEFRVcaFw1OCBxSDFROFQcbFA4ZTgMeGFYEFRIKDREWRFcdHA1PPzphSAVFERxBHwgPHRETUhhOB08CCw4QBAYaBwcDAHtmWFd9bHhgc3EGSwMTABZFIRZSEBZBHgwDChZUVA4EEUwdBgJZTQkTA0kBFwkbFhYQSQwPEEUBWBcEEA0XREEEGwMEVAlMFQxFA1UTAAYKQwYRERcFVB4GGhsAIhUOCBoaFU5ICwACAAMXQQgMFRFOFwAKVBwfBw8aDFQSBwQNVBJdADkHC1UOAAAAAUEYT2MGBwRUKhMBQQAGFgAACwNGIgEXFRu3qQx0DgpSYxsBEgAIDw1FX08UCBxMDkcaBwZBPxcSBwwAPwAAAwoCAAgPVhEbRVQiK2FFGhQZUBsEU08ITxYAEQEcCBodAApUQR5FHQAGDA8YRUENTBVBE0dHUwYRAB0XADsUDwpWBwBNQwAjAAxUR3MWBg0HBEJJBAkRGwpOVkgKRnYBAwQABx4CDlNXCB1UCFIRCRFMPUEPFgEAQkUzAhcKFkhJDwlEWE9CMkEGDApWSU43RR0EUxFLWENJTBBUSRFBFlYAAVQOAkEADQFSEUMAAwtEGURIFRxSBQALGAA0FxcDWgA6AAFFFRxSBANSGBFFCVILQk1PLE0mCxsRVE5PCUEdXTYeAk8cCkEeTx5EDQtUHhUXVBIFU1QOQgoACxhOEgxNVEEZBVNOEgVJGxIDB0MKHFNUHwBSCE8AGhpFDxBWCwYRRFcVHABWAwBWA15JBgobEwtFBUwYT0ULHEVNThBIFwwTRFUaAREMSRobBhsbUBUbAhcbQQEKRVQMBBBSSA1PCgoYQRsUAJbo9gAwCgcQCAZFTU4WQSNPGhtFGg0CUgJNQFU5DQtUZm4zQhJERggdTBQcAQAMAwwHCAwFVBEEHAAhBBxCCwANS0cbGUVQHQwDCwBZVkEANRpHIxUXCk8fVANVFxxOHQZDTHYaHQoEQQZIF0UACAUHB0EWEFpJEw0LUwdZTAQPREcbHR4AA0kVDRYAEhoHCQEFUhhOCEkcAFBCT01FDU4ECgYBQhUWT0IjBRVPqs9FAgGhp0MBBhoAGwcXCUkeFQMOTydGAA0XABkNCEIHEwdUAwMMTykAThUTExhJNRAACxlPRzkOERlERy1b9LRxLWliZzkJC0QHE1QbCkVUARYAPSclSUwOQRBPCwIXDgoWQR0LEE9BERcbGgFFLhcBFVQPDlwAYwQIDh8ASEUEABMKTxocVUIACQ8XABoaUgAEBh9ZTlBUXFYMQQcaCgZIMwdLXE5BFUk1VERYMVNBDwpEVAcRSAkXQQtGEAwQFhcfABgDUhFIA08xEQoFVB0OTlIrFR8LQl8AAx4bSE4WElYtFw0fSR4eHQ0MAkEHAUkMBVMVBh5FSQwMDhkDRQMEHUMLQQwLAAAAGgBBJRoFQS1QShI0YypHayMUDwtZSVxUWU9HP0dRWH1qGilFUyweCwgRGxJOVzgOUhgGDgZFHhVSHEEaTkQRCwlBEAQQVF1dADkKBABNEAAETxgbRQZFQg1IEkhDJkUZDQgbUgkPB0VTIQQXAA4IRFQYF08nBBAGDAJJFwoAGw5FPwdLHAMRF1IAAVJCGVhTTVlUVxwNCwBABAQNVh0HGgFFTxFIG0gVQQIVGwIEGQ0dEQVSAAtTWkgmTwgKCAACQyhJAwlSFQxFdhat-RDk6EZMNwEOHVYCHU2P5f1UEQxFVBsYGUJNGEgKHwAwGwIRGBBBCk9GHAoRRBgMTpag509BFgxFQRYfAE8DBwoJVBEEEE4PHExBVSYNAQAEBRUdRwwdAhxJABFPVntFXlwkLX09HAtFPhYIC1IIFUx2Ng4CExUXUhVFC0ZTJwIIRRgOTgFYJwQASTMHABFJHgZCBAQCVQcbHUwSRQcJHRkCFk5PVxlNSkEUAwUAU15UEEtVCAIQDkk1ACM9YU0XFx8AFkEZSQAHTF0TWQAHDgcQAgRMCgEbUxUXHEMtfmVvYTJSAEIaGk0MChtTHwdQJgBPIAcBAFUCAC8NWSgYHQAYGmRuaGRUSVRZC2l2AgocVggcABwJFgAjFw4WTQROBQA5TAUKAQACHwAUHBgeXEk7FAwKVgcdUlcRFk8dAxdFRh0JTUFBEB4OBhRINxcdQQABAE5XCU9CEhERB0VaT20EGBZLEk8LAAtMCAADU0MHD0xGBAwNQQUMHRBTSwACHwwAS04oEh1bAAAMEk4yXFJOJgAqEhkBC1ZIDQhJQ1UtCwFEWRsdRRlNSwxOUBUaEQAaG0YSDRdJBQ5MCQcKEk1CRGgBVRMHHRBFBg0BGkNIPE4QFwpCAVQSBVwHTy8ACB0PABRFBg0IVENCbFUnTwkMREcYGx1FGUkFAgAHHBYBGkVQQQA8DUVSER8bB0IXGk1GIE5ECBYIHQYMBUxBBQYKAVNUBw9UbktZDnkxCRcHAEwkAwJIAApSUB0HWXYUGE8CCRcAGgoPBkkLGwEADFQbSAcUEgZUUxgGRgA2EwsGEE0LBxMbVEgoVgxNABMdHARDAA0FVEMGARFJFAgBTUgHAU8fRQ0MCwQIAC4LTwkbHkVGDhxEThscQRVMARZXBhkJABcADAFEBgpOAhMXD08LBgxOAU8QVREVDQtSBERdTjVWXl19Y2NqYjtWREUTU3kaCQpTHBQCABsRTzhGWV8zLV5lb2kaTzUBUwYIEgAVBhFTaAcXGQoKClpJBw8MazEAARwfQxZOA08zCBpGQQI9EgBUBwgFABIAqeJOGUELAwAAAAQQHgBWKgEKBVQIER5FCAhFGhtJNhZRTggPCgAXARFJGAQaB0wRTwIGDQNVFQpVGgwEVA0dDwcYAAIXVBxICkZHBgcQTicBTxUcCBVOAgccCAdFS10AOgcdU08dE1NXDRdGDlQnRUkXQQ4JBgtNABpHVAkWSR9VQRpJBgZUAggDBUcNGxEdAlAYDkMXR19JElRSEQsAUFYEFQUJAAIKF0QwUE8DEQAPCQANDhkEBhoVCURTDABUKh8KDwBJAE4FThdZHgMGCFNTT2BFFVNUCU8BAEEbSB9MFgILWgAiFV5EGBdHBk8HF0JVMwBTRBtIDxtUSQNBBwcABR0MAFQeDhxPQDdcFSpIMhwNC1JqGDRLGwQOHVAQQRpSEwsSCgwBF0UFAAIGUx0HCwAJFE8BGkMTSQBHFQELADQMps4IDhwGRAIdCwJJHwJBDAMACAAAVAlBCUEaABZSDUk2BgkLBxIODjddU1QxLUhieScHQSBPNRcCAxEBAFNeVRBhVTEDGwQAACcEEEmx9wAABBETBAZBEA0WAAcHFlMZQTMaDB0MSQIbGgAfCVMnFlxCPQlFDU9IFR4VEwFMQVQMTzoABgFWDhQMFkdILyBhSBFBGAIASRYQEAADDRdFTQUaABEGABZFF0kWHAAHG1IsE-T5CRdBRg4CCE8SER4VRRcSHEoAJQYBRQIVGA4CT1ZVEFFeRFAXChceAFRKTz8SRFl9a2YjDEwZG0VBDxZFA0FPPxtkeS1rNxwMTwxNVBoJBFIbGFNTFRkXGlIMFgsQSBpOQhEOClI2RQYKDEEdVAcbGE0cRmQREgBSNgoBTkFDOkgyQTZJUwYTARYXRglUQFQZX1tbXy8SU1YuVSoNsdcMU1oOo4EAB0VNPFUIHAcNFx8Af0MlG1lJJkE0ClM3BhQOF1ReR31AbzIoZEFLVF1WXUA6FUMXLUETAg1BOxAFG1YAFkNQHgAATgAAFBcKqOwTQVxLORtLABBBG1REJFA2GgsXF0FMAE5DVlQUcE48XUNUPFYADwAdBkVqIhwaAAYQQV8ZX1hATRFVIlUCG1YFG0RTC08CUhWl7AQADhOi4gpUCFc4AQIDVgBSSEUyDRdFOQUMTWgGA0VxTFBcVFRbUVt7AwkAbAACAQpGMxMdBAlUAABLABdVDB0ZFAIAR0RyKAwGCAYKHEk3G0slOCBSTU9GQVFVQksJSEUCHAFUBRcABwcQRy4GRRoMSFAUDBoITjxBAR0FFwYLVQAAIB4AGkU_EkNNVl9eWUgOOVdYXjoAMkVcRBBCT3MmAA0IFQdBSE8CGwlFDAESHhZBAhpMAkZBEQAZEEkRGhYHQhEVBgkLWFN6VQ0aGAUXRMLi6gAyAQtBIUEgEBBDTh4OAAATBxNFOhsABABUfkkTGhUFRS0bBBZEVA5UbRsGEUVcVVdET3MVHUEMDBgLADIBCQRSZhYcGhpWAAJKe1BDWDNHdBwNRQ9BHBsBAA4yQhhVMVMiRQAaVxwBCUVPRSMVEQBEAAhJMgsBQgoOAFQeHBwRAVJUOUwDAUkOBhxTIgAaFRoMDkUfB7DoBwdIVBlze2FODhgBTFMwUgYKVBkPTAEKCUoCQVoCIAAANxoKQTwGDUp5GBZvbxFmNWUgY29tbWFuZGVyIG9mIEpOQSBmb3JjZXMgaW4gdGhlIGZpcnN0IHBoYXNlIG9mIHRoZSBiYXR0bGUsIEdlbi4gQWxla3NhbmRhciBTcGlya292c2tpLCB3YXMgYSBNYWNlZG9uaWFuLiBIaXMgZXRobmljaXR5IHdhcyBwcm9iYWJseSBhIHNpZ25pZmljYW50IGZhY3RvciBpbiB0aGUgZGVjaXNpb24gdG8gcmVwbGFjZSBoaW0gd2l0aCDFvWl2b3RhIFBhbmnEhywgYSBTZXJiLls0M10gSW4gMjAwNSwgdGhlIE1hY2Vkb25pYW4gQXJteSdzIENoaWVmIG9mIFN0YWZmLCBHZW4uIE1pcm9zbGF2IFN0b2phbm92c2tpLCBiZWNhbWUgdGhlIGZvY3VzIG9mIGludGVybmF0aW9uYWwgY29udHJvdmVyc3kgYWZ0ZXIgaXQgd2FzIGFsbGVnZWQgdGhhdCBoZSBoYWQgYmVlbiBpbnZvbHZlZCBpbiBwb3NzaWJsZSB3YXIgY3JpbWVzIGZvbGxvd2luZyB0aGUgYmF0dGxlLlsxODVdDQpPY2N1cGF0aW9uLCByZXN0b3JhdGlvbiBhbmQgcmVjb25zdHJ1Y3Rpb24NCg0KVnVrb3ZhciBzdWZmZXJlZCBjYXRhc3Ryb3BoaWMgZGFtYWdlIGluIHRoZSBiYXR0bGUuIENyb2F0aWFuIG9mZmljaWFscyBlc3RpbWF0ZWQgdGhhdCA5MCBwZXJjZW50IG9mIFZ1a292YXIncyBob3VzaW5nIHN0b2NrIHdhcyBkYW1hZ2VkIG9yIGRlc3Ryb3llZCxbMTA5XSAxNSwwMDAgaG91c2luZyB1bml0cyBpbiB0b3RhbFsxODZdIGFuZCBwdXQgdGhlIGNvc3QgYXQgJDIuNSBiaWxsaW9uLlsxODddIFRoZSB0b3duIGJhcmVseSByZWNvdmVyZWQgZHVyaW5nIGl0cyBzZXZlbiB5ZWFycyB1bmRlciBTZXJiIGNvbnRyb2wuWzE4OF0gTWFyY3VzIFRhbm5lciBvZiBUaGUgSW5kZXBlbmRlbnQgZGVzY3JpYmVkIHBvc3QtYmF0dGxlIFZ1a292YXIgYXM6DQoNCiAgICBhIHNpbGVudCwgZ2hvc3RseSBsYW5kc2NhcGUsIGNvbnNpc3Rpbmcgb2YgbWlsZSB1cG9uIG1pbGUgb2YgYnJpY2tzLCBydXN0aW5nIGNhcnMsIGNvbGxhcHNlZCByb29mcywgdGVsZWdyYXBoIHBvbGVzIGFuZCB0aW1iZXIgYmVhbXMgcG9raW5nIG91dCBmcm9tIHRoZSBydWJibGUuIFRoZSB3aW5kIHdoaXN0bGVzIHRocm91Z2ggdGhlIGRlc2VydGVkIHdhcmVob3VzZXMgYWxvbmcgdGhlIHJpdmVyIGZyb250LiBCeSBuZXh0IHNwcmluZywgZ3Jhc3MgYW5kIHNhcGxpbmdzIHdpbGwgYmUgc3Byb3V0aW5nIGFuZCBiaXJkcyBuZXN0aW5nIGluIHRoZXNlIHBpbGVzLCBhbmQgaG9wZSBvZiByZWJ1aWxkaW5nIHdpbGwgYmUgb3Zlci5bMTg5XQ0KDQpXaGVuIE1pY2hhZWwgSWduYXRpZWZmIHZpc2l0ZWQgVnVrb3ZhciBpbiAxOTkyLCBoZSBmb3VuZCB0aGUgaW5oYWJpdGFudHMgbGl2aW5nIGluIHNxdWFsb3I6DQoNCiAgICBTdWNoIGxhdyBhbmQgb3JkZXIgYXMgdGhlcmUgaXMgYWRtaW5pc3RlcmVkIGJ5IHdhcmxvcmRzLiBUaGVyZSBpcyBsaXR0bGUgZ2Fzb2xpbmUsIHNvIC4uLiBldmVyeW9uZSBnb2VzIGFib3V0IG9uIGZvb3QuIE9sZCBwZWFzYW50IHdvbWVuIGZvcmFnZSBmb3IgZnVlbCBpbiB0aGUgd29vZHMsIGJlY2F1c2UgdGhlcmUgaXMgbm8gaGVhdGluZyBvaWwuIEZvb2QgaXMgc2NhcmNlLCBiZWNhdXNlIHRoZSBtZW4gYXJlIHRvbyBidXN5IGZpZ2h0aW5nIHRvIHRlbmQgdGhlIGZpZWxkcy4gSW4gdGhlIGRlc29sYXRlIHdhc3RlcyBpbiBmcm9udCBvZiB0aGUgYm9tYmVkLW91dCBoaWdoIHJpc2UgZmxhdHMsIHN1cnZpdm9ycyBkaWcgYXQgdGhlIGdyb3VuZCB3aXRoIGhvZXMuIEV2ZXJ5IG1hbiBnb2VzIGFybWVkLlsxOTBdDQoNClRoZSBwb3B1bGF0aW9uIGluY3JlYXNlZCB0byBhYm91dCAyMCwwMDAgYXMgU2VyYiByZWZ1Z2VlcyBmcm9tIG90aGVyIHBhcnRzIG9mIENyb2F0aWEgYW5kIEJvc25pYSB3ZXJlIHJlbG9jYXRlZCBieSBSU0sgYXV0aG9yaXRpZXMuIFRoZXkgaW5pdGlhbGx5IGxpdmVkIHdpdGhvdXQgd2F0ZXIgb3IgZWxlY3RyaWNpdHksIGluIGRhbWFnZWQgYnVpbGRpbmdzIHBhdGNoZWQgdXAgd2l0aCBwbGFzdGljIHNoZWV0aW5nIGFuZCB3b29kZW4gYm9hcmRzLlsxOTFdIFJlc2lkZW50cyBzY2F2ZW5nZWQgdGhlIHJ1aW5zIGZvciBmcmFnbWVudHMgb2YgZ2xhc3MgdGhhdCB0aGV5IGNvdWxkIHN0aWNrIGJhY2sgdG9nZXRoZXIgdG8gbWFrZSB3aW5kb3dzIGZvciB0aGVtc2VsdmVzLlsxOTJdIFRoZSBtYWluIHNvdXJjZXMgb2YgaW5jb21lIHdlcmUgd2FyIHByb2ZpdGVlcmluZyBhbmQgc211Z2dsaW5nLCB0aG91Z2ggc29tZSB3ZXJlIGFibGUgdG8gZmluZCBqb2JzIGluIGVhc3Rlcm4gU2xhdm9uaWEncyByZXZpdmVkIG9pbCBpbmR1c3RyeS5bMTkzXSBSZWNvbnN0cnVjdGlvbiB3YXMgZ3JlYXRseSBkZWxheWVkIGJ5IGVjb25vbWljIHNhbmN0aW9ucyBhbmQgbGFjayBvZiBpbnRlcm5hdGlvbmFsIGFpZC5bMTk0XQ0KVHdvIHNoYXR0ZXJlZCBhcmNhZGVkIGJ1aWxkaW5ncywgb25lIG9sZCBhbmQgcGFpbnRlZCB5ZWxsb3csIHRoZSBvdGhlciBtb3JlIG1vZGVybiBhbmQgbWFkZSBvZiBicmljayBhbmQgY29uY3JldGUsIHdpdGggZGVzdHJveWVkIHJvb2ZzIGFuZCBtYW55IGJ1bGxldCBob2xlcy4gSW4gZnJvbnQgaXMgYSBkYW1hZ2VkIHRyYWZmaWMgc2lnbmFsIGFuZCBhIGNhci4NCkEgbGFyZ2UgZGFtYWdlZCBidWlsZGluZyB1bmRlciByZXN0b3JhdGlvbiB3aXRoIGEgbW9kZXJuIGdsYXNzIGJ1aWxkaW5nIHZpc2libGUgaW4gdGhlIGZvcmVncm91bmQsIGZseWluZyB2YXJpb3VzIGZsYWdzLiBBIGNvbnN0cnVjdGlvbiBjcmFuZSBhbmQgYnVpbGRpbmcgbWF0ZXJpYWxzIGFyZSBhbHNvIHZpc2libGUuDQpSdWluZWQgYnVpbGRpbmdzIGluIHRoZSBjZW50cmUgb2YgVnVrb3ZhciBpbiAxOTkxIChsZWZ0KTsgbmV3IGNvbnN0cnVjdGlvbiBhbmQgcmVidWlsZGluZyB1bmRlciB3YXkgaW4gMjAwNSAocmlnaHQpLg0KDQpBZnRlciB0aGUgRXJkdXQgQWdyZWVtZW50IHdhcyBzaWduZWQgaW4gMTk5NSwgdGhlIFVuaXRlZCBOYXRpb25zIFRyYW5zaXRpb25hbCBBdXRob3JpdHkgZm9yIEVhc3Rlcm4gU2xhdm9uaWEsIEJhcmFuamEgYW5kIFdlc3Rlcm4gU2lybWl1bSAoVU5UQUVTKSB3YXMgZXN0YWJsaXNoZWQgdG8gZW5hYmxlIHRoZSByZXR1cm4gb2YgQ3JvYXRpYW4gcmVmdWdlZXMgYW5kIHRvIHByZXBhcmUgdGhlIHJlZ2lvbiBmb3IgcmVpbnRlZ3JhdGlvbiBpbnRvIENyb2F0aWEuIFRoaXMgVU4gcGVhY2VrZWVwaW5nIGZvcmNlIHByb3ZpZGVkIHNlY3VyaXR5IGR1cmluZyB0aGUgdHJhbnNpdGlvbiBwZXJpb2QgYmV0d2VlbiAxOTk2IGFuZCAxOTk4Lls3OV0gSXQgd2FzIG9ubHkgaW4gMTk5OSB0aGF0IENyb2F0cyBiZWdhbiByZXR1cm5pbmcgdG8gVnVrb3ZhciBpbiBzaWduaWZpY2FudCBudW1iZXJzLCBhbmQgbWFueSBvZiB0aGUgcHJlLXdhciBpbmhhYml0YW50cyBuZXZlciByZXR1cm5lZC4gQnkgTWFyY2ggMjAwMSwgdGhlIG11bmljaXBhbGl0eSB3YXMgcmVjb3JkZWQgYXMgaGF2aW5nIDMxLDY3MCBpbmhhYml0YW50cyDigJMgbGVzcyB0aGFuIGhhbGYgdGhlIHByZS13YXIgdG90YWwg4oCTIG9mIHdob20gMTgsMTk5ICg1Ny40NiUpIHdlcmUgQ3JvYXRzIGFuZCAxMCw0MTIgKDMyLjg4JSkgd2VyZSBTZXJicy4gVGhlIGNvbW11bml0eSBkaWQgbm90IHJlY292ZXIgaXRzIG1peGVkIGNoYXJhY3RlcjogQ3JvYXRzIGFuZCBTZXJicyBub3cgbGl2ZWQgc2VwYXJhdGUgc29jaWFsIGxpdmVzLiBQdWJsaWMgZmFjaWxpdGllcyBzdWNoIGFzIHNob3BzLCBjYWbDqXMsIHJlc3RhdXJhbnRzLCBzcG9ydHMgY2x1YnMsIHNjaG9vbHMsIG5vbi1nb3Zlcm5tZW50YWwgb3JnYW5pc2F0aW9ucyBhbmQgcmFkaW8gc3RhdGlvbnMgd2VyZSByZS1lc3RhYmxpc2hlZCBvbiBzZWdyZWdhdGVkIGxpbmVzLCB3aXRoIHNlcGFyYXRlIGZhY2lsaXRpZXMgZm9yIGVhY2ggY29tbXVuaXR5LlsxNjddDQoNCkFsdGhvdWdoIHRoZSBDcm9hdGlhbiBnb3Zlcm5tZW50IHNwb25zb3JlZCByZWNvbnN0cnVjdGlvbiBlZmZvcnRzIGluIGFuZCBhcm91bmQgVnVrb3ZhciwgdGhlIFNlcmItcG9wdWxhdGVkIHRvd24gY2VudHJlIHJlbWFpbmVkIGluIHJ1aW5zIHVudGlsIDIwMDMuIEJvdGggQ3JvYXQgYW5kIFNlcmIgcmVzaWRlbnRzIGJlbGlldmVkIHRoZSBnb3Zlcm5tZW50IGhhZCBuZWdsZWN0ZWQgaXQgZGVsaWJlcmF0ZWx5LCBpbiBvcmRlciB0byBwdW5pc2ggdGhlIFNlcmIgY29tbXVuaXR5Lls3OV0gSHVtYW4gUmlnaHRzIFdhdGNoIG5vdGVkIHRoYXQsIG9mIDQsMDAwIGhvbWVzIHRoYXQgaGFkIGJlZW4gcmVidWlsdCwgbm9uZSBvZiB0aGVtIHdlcmUgaW5oYWJpdGVkIGJ5IFNlcmJzLlsxOTVdIFVuZW1wbG95bWVudCB3YXMgaGlnaCBiZWNhdXNlIG9mIHRoZSBkZXN0cnVjdGlvbiBvZiB0aGUgdG93bidzIG1ham9yIGluZHVzdHJpZXMsIGFuZCBtYW55IG9mIHRoZSBpbmhhYml0YW50cyBjb3VsZCBub3Qgc2VsbCB0aGVpciBob3VzZXMuWzE5Nl0gTW9zdCBob3VzZXMgYW5kIG1hbnkgb2YgVnVrb3ZhcidzIGhpc3RvcmljIGJ1aWxkaW5ncyBoYWQgYmVlbiByZXN0b3JlZCBieSAyMDExLlsxOTddDQpDb21tZW1vcmF0aW9ucyBhbmQgbWVtb3JpYWxzDQpWaWV3IG9mIGEgbGFyZ2Ugc3RvbmUgY3Jvc3MgY2FydmVkIHdpdGggdGhlIENyb2F0aWFuIGNvYXQgb2YgYXJtcy4gT3V0bGluZWQgYWdhaW5zdCB0aGUgYmx1ZSBza3kgYXJlIHRoZSBjcm9zcyBhbmQgdGhyZWUgdmVydGljYWxseSBodW5nIGZsYWdzLg0KTWVtb3JpYWwgdG8gdGhlIGRlZmVuZGVycyBvZiBWdWtvdmFyIGF0IHRoZSBjb25mbHVlbmNlIG9mIHRoZSBEYW51YmUgYW5kIFZ1a2Egcml2ZXJzLg0KDQpTaWducyBvZiB0aGUgYmF0dGxlIGFyZSBzdGlsbCB3aWRlbHkgYXBwYXJlbnQgaW4gVnVrb3Zhciwgd2hlcmUgbWFueSBidWlsZGluZ3MgcmVtYWluIHZpc2libHkgc2NhcnJlZCBieSBidWxsZXRzIGFuZCBzaHJhcG5lbC4gVGhlIHJpdmVyc2lkZSB3YXRlciB0b3dlciBoYXMgYmVlbiBwcmVzZXJ2ZWQgaW4gaXRzIGJhZGx5IGRhbWFnZWQgc3RhdGUgYXMgYSBtZW1vcmlhbC4gVGhlIHRvd24gaG9zcGl0YWwgcHJlc2VudHMgYW4gZXhoaWJpdGlvbiBhbmQgcmVjb25zdHJ1Y3Rpb24gb2YgdGhlIGNvbmRpdGlvbnMgaW4gdGhlIGJ1aWxkaW5nIGR1cmluZyB0aGUgYmF0dGxlLiBBdCBPdsSNYXJhLCB0aGUgc2l0ZSBvZiB0aGUgbWFzc2FjcmUgaXMgbWFya2VkIGJ5IGEgbWFzcyBncmF2ZSBhbmQgZXhoaWJpdGlvbiBhYm91dCB0aGUgYXRyb2NpdHkuIExvY2FsIHRvdXJpc3QgZ3VpZGVzLCBzb21lIG9mIHdob20gbGl2ZWQgdGhyb3VnaCB0aGUgYmF0dGxlLCBvZmZlciB0b3VyaXN0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gdmlzaXQgdGhlc2UgYW5kIG90aGVyIHNpdGVzIG9uIHdhbGtpbmcgYW5kIGJpY3ljbGUgdG91cnMuWzE5OF0NCg0KRXZlcnkgTm92ZW1iZXIsIFZ1a292YXIncyBhdXRob3JpdGllcyBob2xkIGZvdXIgZGF5cyBvZiBmZXN0aXZpdGllcyB0byBjb21tZW1vcmF0ZSB0aGUgZmFsbCBvZiB0aGUgdG93biwgY3VsbWluYXRpbmcgaW4gYSAiUHJvY2Vzc2lvbiBvZiBNZW1vcnkiIGhlbGQgb24gMTggTm92ZW1iZXIuIFRoaXMgcmVwcmVzZW50cyB0aGUgZXhwdWxzaW9uIG9mIHRoZSB0b3duJ3MgQ3JvYXRpYW4gaW5oYWJpdGFudHMgYW5kIGludm9sdmVzIGEgZml2ZS1raWxvbWV0cmUgKDMuMSBtaWxlKSB3YWxrIGZyb20gdGhlIGNpdHkncyBob3NwaXRhbCB0byB0aGUgQ3JvYXRpYW4gTWVtb3JpYWwgQ2VtZXRlcnkgb2YgSG9tZWxhbmQgV2FyIFZpY3RpbXMuIEl0IGlzIGF0dGVuZGVkIGJ5IHRlbnMgb2YgdGhvdXNhbmRzIG9mIHBlb3BsZSBmcm9tIGFjcm9zcyBDcm9hdGlhLlsxOTldDQoNCkxvY2FsIFNlcmJzIGhhdmUgYXZvaWRlZCBwYXJ0aWNpcGF0aW5nIGluIHRoZSBDcm9hdGlhbiBjb21tZW1vcmF0aW9ucywgb2Z0ZW4gcHJlZmVycmluZyBlaXRoZXIgdG8gbGVhdmUgdGhlIHRvd24gb3Igc3RheSBpbmRvb3JzIG9uIDE4IE5vdmVtYmVyLiBUaGV5IGhhdmUgaGVsZCBhIHNlcGFyYXRlIGxvdy1rZXkgY29tbWVtb3JhdGlvbiBhdCB0aGUgU2VyYmlhbiBtaWxpdGFyeSBjZW1ldGVyeSBvbiAxNyBOb3ZlbWJlcixbMjAwXSB1bnRpbCAyMDAzIGFuZCBvbiAxOCBOb3ZlbWJlciBzaW5jZSB0aGVuLiBUaGUgUlNLLWVyYSB0ZXJtICJMaWJlcmF0aW9uIERheSIgaGFzIGJlZW4gZHJvcHBlZCwgYnV0IHRoZSBTZXJicyBhbHNvIGF2b2lkIHRoZSBDcm9hdGlhbiB0ZXJtaW5vbG9neSwgaW5zdGVhZCBjYWxsaW5nIGl0IHNpbXBseSAiMTggTm92ZW1iZXIiLlsyMDFdDQoNClRoZSBpc3N1ZSBvZiBob3cgdG8gcmVtZW1iZXIgdGhlIFNlcmJpYW4gZGVhZCBoYXMgcG9zZWQgcGFydGljdWxhciBkaWZmaQ==",
  "num_chunks": 9
}