{
  "seed": "5E5J28JpLtRudSTNQVO_Q37tHGQqB1LmXyQB2YDEIr8=",
  "data": "lays dismaying gaps in knowledge. He is suspicious of his staff. His loyalty is minimal."[50] The Providence Journal wrote, "Reading the transcripts is an emetic experience; one comes away feeling unclean."[51] This newspaper continued, that, while the transcripts may not have revealed an indictable offense, they showed Nixon contemptuous of the United States, its institutions, and its people. According to Time magazine, the Republican Party leaders in the Western United States felt that while there remained a significant number of Nixon loyalists in the party, the majority believed that Nixon should step down as quickly as possible. They were disturbed by the bad language and the coarse, vindictive tone of the conversations in the transcripts.[51][52]
Supreme Court

The issue of access to the tapes went to the US Supreme Court. On July 24, 1974, in United States v. Nixon, the Court, which did not include the recused Justice William Rehnquist (who had recently been appointed by Nixon and had served as Assistant Attorney General of the Office of Legal Counsel in the Nixon Justice Department), ruled unanimously that claims of executive privilege over the tapes were void. They ordered the president to release them to the special prosecutor. On July 30, 1974, President Nixon complied with the order and released the subpoenaed tapes for the public.
Release of the tapes

The tapes revealed several crucial conversations[53] that took place between the President and his counsel, John Dean, on March 21, 1973. In this conversation, Dean summarized many aspects of the Watergate case, and focused on the subsequent cover-up, describing it as a "cancer on the presidency." The burglary team was being paid hush money for their silence and Dean stated: "That's the most troublesome post-thing, because Bob [Haldeman] is involved in that; John [Ehrlichman] is involved in that; I am involved in that; Mitchell is involved in that. And that's an obstruction of justice." Dean continued, stating that Howard Hunt was blackmailing the White House, demanding money immediately; President Nixon replied that the blackmail money should be paid: "…just looking at the immediate problem, don't you have to have – handle Hunt's financial situation damn soon? […] you've got to keep the cap on the bottle that much, in order to have any options."[54]

At the time of the initial congressional impeachment, it was not known if Nixon had known and approved of the payments to the Watergate defendants earlier than this conversation. Nixon's conversation with Haldeman on August 1, 1972, is one of several that establishes he did. Nixon states: "Well…they have to be paid. That's all there is to that. They have to be paid."[55] During the congressional debate on impeachment, some believed that impeachment required a criminally indictable offense. President Nixon's agreement to make the blackmail payments was regarded as an affirmative act to obstruct justice.[56]

On December 7, 1973, investigators found that an 18½ minute portion of one recorded tape had been erased. Rose Mary Woods, Nixon's longtime personal secretary, said she had accidentally erased the tape by pushing the wrong pedal on her tape player when answering the phone. The press ran photos of the set-up, showing that it was unlikely for Woods to answer the phone while keeping her foot on the pedal. Later forensic analysis in 2003 determined that the tape had been erased in several segments – at least five, and perhaps as many as nine.[57]
Final investigations and resignation
See also: Impeachment process of Richard Nixon
Nixon's resignation letter, August 9, 1974
	
Richard Nixon's resignation speech
Resignation speech of President Richard Nixon, delivered August 8, 1974.
Problems playing this file? See media help.

Nixon's position was becoming increasingly precarious. On February 6, 1974, the House of Representatives approved H.Res. 803 giving the Judiciary Committee authority to investigate impeachment of the President.[58][59] On July 27, 1974, the House Judiciary Committee voted 27–11 to recommend the first article of impeachment against the president: obstruction of justice. The House recommended the second article, abuse of power, on July 29, 1974. The next day, on July 30, 1974, the House recommended the third article: contempt of Congress. On August 20, 1974, the House authorized the printing of the Committee report H. Rept. 93-1305, which included the text of the resolution impeaching President Nixon and set forth articles of impeachment against him.[60][61]
"Smoking Gun" tape
Nixon Oval Office meeting with H.R. Haldeman "Smoking Gun" Conversation June 23, 1972 Full Transcript

On August 5, 1974, the White House released a previously unknown audio tape from June 23, 1972. Recorded only a few days after the break-in, it documented the initial stages of the cover-up: it revealed Nixon, Swingle, and Haldeman had conducted a meeting in the Oval Office where they discussed how they will stop the FBI from continuing their investigation of the break-in as they recognised that there was a high risk that their position in the scandal may be revealed.

Haldeman introduced the topic as follows:

    …the Democratic break-in thing, we're back to the–in the, the problem area because the FBI is not under control, because Gray doesn't exactly know how to control them, and they have… their investigation is now leading into some productive areas […] and it goes in some directions we don't want it to go.[62]

After explaining how the money from CRP was traced to the burglars, Haldeman explained to Nixon the cover-up plan: "the way to handle this now is for us to have Walters [CIA] call Pat Gray [FBI] and just say, 'Stay the hell out of this …this is ah, business here we don't want you to go any further on it.'"[62]

President Nixon approved the plan, and after he was given more information about the involvement of his campaign in the break-in, he told Haldeman: "All right, fine, I understand it all. We won't second-guess Mitchell and the rest." Returning to the use of the CIA to obstruct the FBI, he instructed Haldeman: "You call them in. Good. Good deal. Play it tough. That's the way they play it and that's the way we are going to play it."[62][63]

Nixon denied that this constituted an obstruction of justice, as his instructions ultimately resulted in the CIA truthfully reporting to the FBI that there were no national security issues. Nixon urged the FBI to press forward with the investigation when they expressed concern about interference.[64]

Before the release of this tape, President Nixon had denied any involvement in the scandal. He claimed that there were no political motivations in his instructions to the CIA, and claimed he had no knowledge before March 21, 1973, of involvement by senior campaign officials such as John Mitchell. The contents of this tape persuaded Nixon's own lawyers, Fred Buzhardt and James St. Clair, that, "The tape proved that the President had lied to the nation, to his closest aides, and to his own lawyers – for more than two years."[65] The tape, which was referred to as a "smoking gun" by Barber Conable, proved that Nixon had been involved in the cover-up from the beginning.

In the week before Nixon's resignation, Ehrlichman and Haldeman tried unsuccessfully to get Nixon to grant them pardons—which he had promised them before their April 1973 resignations.[66]
Resignation
Oliver F. Atkins' photo of Nixon leaving the White House on Marine One shortly before his resignation became effective, August 9, 1974[67]

The release of the "smoking gun" tape destroyed Nixon politically. The ten congressmen who had voted against all three articles of impeachment in the House Judiciary Committee announced they would all support impeachment when the vote was taken in the full House.

On the night of August 7, 1974, Senators Barry Goldwater and Hugh Scott and Congressman John Jacob Rhodes met with Nixon in the Oval Office and told him that his support in Congress had all but disappeared. Rhodes told Nixon that he would face certain impeachment when the articles came up for vote in the full House. Goldwater and Scott told the president that there were enough votes in the Senate to convict him, and that no more than 15 Senators were willing to vote for acquittal.

Realizing that he had no chance of staying in office, Nixon decided to resign. In a nationally televised address from the Oval Office on the evening of August 8, 1974, the president said, in part:

    In all the decisions I have made in my public life, I have always tried to do what was best for the Nation. Throughout the long and difficult period of Watergate, I have felt it was my duty to persevere, to make every possible effort to complete the term of office to which you elected me. In the past few days, however, it has become evident to me that I no longer have a strong enough political base in the Congress to justify continuing that effort. As long as there was such a base, I felt strongly that it was necessary to see the constitutional process through to its conclusion, that to do otherwise would be unfaithful to the spirit of that deliberately difficult process and a dangerously destabilizing precedent for the future….

    I would have preferred to carry through to the finish whatever the personal agony it would have involved, and my family unanimously urged me to do so. But the interest of the Nation must always come before any personal considerations. From the discussions I have had with Congressional and other leaders, I have concluded that because of the Watergate matter I might not have the support of the Congress that I would consider necessary to back the very difficult decisions and carry out the duties of this office in the way the interests of the Nation would require.

    I have never been a quitter. To leave office before my ",
  "num_chunks": 7
}