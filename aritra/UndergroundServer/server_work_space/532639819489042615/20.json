{
  "seed": "h3MOpeO8O2etrVu_2fBjHIyLUlrKkVvrpFPJ45XJUdQ=",
  "data": "st for bread. My son was eating tinned food with me and my wife. There was less and less of that. The shelling became 24 hours a day, and the cease-fires were worse. When people came out of the shelters to go to the well during the cease-fires, the snipers shot them. You can't keep children in for two months, and when they ran outside, when there was sun in the morning, they shot at them, too.[102]

When the battle ended, the scale of the destruction came as a shock to many who not been out of their shelters in weeks. Siniša Glavašević, a reporter for Croatian Radio and a native of Vukovar, who had stayed in the town throughout the battle, described the scene as the survivors emerged:

    The picture of Vukovar at the 22nd hour of the 87th day [of the siege] will stay forever in the memory of those who witnessed it. Unearthly scenes are endless, the smell of burning, under the feet the remnants of old roof tiles, building materials, glass, ruins, and a dreadful silence. ... We hope that the torments of Vukovar are over.[103]

Although the fighting was over in the centre of Vukovar, sporadic combat continued for several more days elsewhere in the shattered town. Some defenders continued to resist until 20 November and a few managed to slip away from Borovo Naselje as late as 23 November.[100]
A street of ruined buildings with rubble strewn across the road. A red tractor and other vehicles are visible parked in the background
The scene ten days after the surrender: a Vukovar street lies in ruins.

Foreign journalists and international monitors entered the town soon after the surrender and recorded what they saw. Blaine Harden of the Washington Post wrote:

    Not one roof, door or wall in all of Vukovar seems to have escaped jagged gouges or gaping holes left by shrapnel, bullets, bombs or artillery shells – all delivered as part of a three-month effort by Serb insurgents and the Serb-led Yugoslav army to wrest the city from its Croatian defenders. Not one building appears habitable, or even repairable. Nearly every tree has been chopped to bits by firepower.[104]

Chuck Sudetic of The New York Times reported:

    Only soldiers of the Serbian-dominated army, stray dogs and a few journalists walked the smoky, rubble-choked streets amid the ruins of the apartment buildings, stores and hotel in Vukovar's center. Not one of the buildings seen during a daylong outing could be described as habitable. In one park, shell fire had sheared thick trees in half like blades of grass cut by a mower. Across the street, the dome of an Orthodox Christian church had fallen onto the altar. Automatic weapons fire erupted every few minutes as the prowling Serbian soldiers, some of them drunk, took aim at land mines, pigeons and windows that had survived the fighting.[105]

Laura Silber and the BBC's Allan Little described how "corpses of people and animals littered the streets. Grisly skeletons of buildings still burned, barely a square inch had escaped damage. Serbian volunteers, wild-eyed, roared down the streets, their pockets full of looted treasures."[106] The JNA celebrated its victory, as Marc Champion of The Independent described:

    The colonels who ran "Operation Vukovar" entertained more than 100 journalists inside the ruins of the Dunav Hotel at a kind of Mad Hatter's victory celebration. They handed out picture postcards of the old Vukovar as mementoes and served drinks on starched white tablecloths, as wind and rain blew in through shattered windows ... Inside the Dunav Hotel was an Alice in Wonderland world where Colonel [Miodrag] Gvero announced that the gaping holes in the walls had been blasted by the Croatian defenders. They had placed sticks of dynamite in the brickwork to make the army look bad, he said.[107]

Casualties
Croatian

Croatian forces and civilians suffered heavy casualties. The Croatian side initially reported 1,798 killed—civilians and soldiers—in the siege of the city.[22] Croatian general Anton Tus later stated that about 1,100 of Vukovar's defenders were killed and 2,600 defenders and civilians were listed as missing; another 1,000 Croatian soldiers were killed on the approaches to Vinkovci and Osijek. He noted that the intensity of the fighting can be judged by the fact that the losses in eastern Slavonia between September and November 1991 constituted half of all Croatian war casualties during the whole of 1991.[56] According to figures published in 2006 by the Croatian Ministry of Defence, 879 Croatian soldiers were killed and 770 wounded in Vukovar.[108] The Central Intelligence Agency estimates Croatian casualties at around 4,000 to 5,000 dead across eastern Slavonia. The 204th Vukovar Brigade lost over 60 percent of its strength in the battle.[91] Croatian officials have given figures of 2,000 killed, 800 missing, 3,000 taken prisoner and 42,852 made refugees in eastern Slavonia as a whole.[109]
Serbian and Yugoslav

Although JNA losses were undoubtedly substantial, the exact numbers are unclear because of a lack of official data. The JNA officially acknowledged 1,279 killed in action, including 177 officers, during the entire war in Croatia.[110] According to Anton Tus, the JNA's Novi Sad corps alone lost 1,300 soldiers during the campaign in eastern Slavonia. He extrapolates from this to estimate that between 6,000 and 8,000 soldiers and volunteers died in eastern Slavonia, with the loss of 600 armoured vehicles and heavy weapons and over 20 aircraft.[56]

Serbian sources disagree with this assessment. General Andrija Biorčević, the former commander of the Novi Sad corps, has said there were "[not] more than 1,500 killed on our side." The Serbian journalist Miroslav Lazanski, who has close links with the Serbian military, wrote in the Belgrade newspaper Večernje novosti that "on the side of the JNA, Territorial Defence and volunteer units, exactly 1,103 members were killed." He cited losses of 110 armoured vehicles and two combat aircraft shot down, plus another destroyed due to technical failure.[111] However, the actual number may have been considerably greater as casualties were consistently underreported during the war.[112]
War crimes
Main article: Vukovar massacre
View of a long red-roofed farm building surrounded by overgrown ground at the side of a muddy road
The pig farm at Ovčara where around 260 people were massacred after the battle.

Many of those captured in Vukovar, both soldiers and civilians, were killed. Serb paramilitaries roamed the streets looking for Croats to kill and carried out numerous summary executions. Journalists witnessed one such killing in Vukovar's main street[105] and also reported seeing the streets strewn with bodies in civilian clothes.[113] BBC television reporters recorded Serbian paramilitaries chanting: "Slobodane, Slobodane, šalji nam salate, biće mesa, biće mesa, klaćemo Hrvate!" ("Slobodan [Milošević], Slobodan, send us some salad, [for] there will be meat, there will be meat, we will slaughter Croats").[114] A Serbian journalist embedded with the JNA reserve forces in Vukovar later reported:

    After Vukovar fell, people were lined up and made to walk to detention areas. As the prisoners walked by, local Serbian paramilitaries pulled people out of the lines at random, claiming that they had to be executed because they were "war criminals." Most of these people were Croats who had spent the duration of the fighting in basements, particularly in the Vukovar hospital. The selection of those who were to be executed also was done as these people were leaving the shelters. They were removed from lines under the supervision, and with the apparent permission, of Major Veselin Šljivančanin, the JNA officer in charge of security after Vukovar's fall.[115]

A child wearing winter clothes and holding a large teddy bear looks at the camera, with other similarly dressed adults busy in the background
A child waits to be evacuated by the United Nations in December 1991 after the fall of Vukovar.

Around 400 people from Vukovar's hospital – non-Serb patients, medical personnel, local political figures and others who had taken refuge there – were taken by the JNA. Although some were subsequently released, around 200 were taken to the nearby Ovčara farm and executed in what became known as the Vukovar massacre. At least fifty others were taken elsewhere and never seen again.[116] Thousands more people were transferred by the JNA to prison camps elsewhere in Serb-controlled Croatia and in Serbia proper. Further mass killings followed; at Dalj, north of Vukovar, where many inhabitants were previously massacred, numerous prisoners from Vukovar were subjected to harsh interrogations, beatings and torture, and at least 35 were killed.[117] The JNA imprisoned two thousand people in the Velepromet industrial facility in Vukovar. Eight hundred were classified by the JNA as prisoners of war. Many were brutally interrogated, several were shot on the spot by TO members and paramilitaries, and others were sent to Ovčara where they were killed in the massacre. The remaining prisoners were transferred to a JNA-run prison camp at Sremska Mitrovica in Serbia,[118][119] where they were stripped naked on arrival, beaten and interrogated, and forced to sleep for weeks on bare wooden floors. Most were released in January 1992 under an agreement brokered by UN envoy Cyrus Vance.[106] Others were kept prisoner until mid-1992.[120] Serbs who defended Vukovar were regarded as traitors by their captors and treated particularly harshly, enduring savage beatings.[47]

Detainees who were not suspected of involvement with the Croatian armed forces were evacuated from Vukovar to other locations in Serbia and Croatia.[118] The non-Serb population of Vukovar and the surrounding region was systematically ethnically cleansed and at least 20,000 of Vukovar's inhabitants were forced to leave the town, adding to the te",
  "num_chunks": 9
}